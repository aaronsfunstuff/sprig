/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: Banana runner 
@author: Aaron Lei
@tags: [bananan]
@addedOn: 2024-00-00
*/

const player = "p"
const knife = "k"
const wall = "w"
const portal = "e"
setLegend(
  [player, bitmap`
................
................
.......000......
.......060......
......0660......
......06660.0...
....0003630.0...
....0.0666000...
....0.01110.....
......06660.....
.....066660.....
.....06660......
......000.......
......0.0.......
.....00.00......
................`],
  [knife, bitmap`
................
................
................
................
................
................
..........0.....
.........0......
.......00.......
......0L0.......
.....0LL0.......
....0LLL0.......
....0110........
....060.........
.....0..........
................`],
  [wall, bitmap`
................
................
................
.......D.D......
.....DDDDDD.....
....DDCDDDDD....
....DDCDDCCD....
...DDDDCDDDD....
...DDDCCCCD.....
...DDCDCCCD.....
...DCCDCC.CD....
...DCD.CC..D....
....D..CC.......
.......CC.......
.......CC.......
................`],
  [portal, bitmap`
................
................
................
................
................
......7.7.7.....
.....7.7.7.7....
....7.7.7.7.7...
.....7.7.7.7....
....7.7...7.7...
.....7.7.7.7....
......7.7.7.....
.......7.7......
........7.......
................
................`],
);



let level = 0
const levels = [
  map`
.ew..
.www.
p..k.
.....`,
  map`
k....
.wwww
p....
.wwww
....e`,
  map`
kw...w...
.w.w.w.w.
.w.w.w.w.
pw.w.w.w.
.w.w.w.w.
.w.w.w.w.
...w...we`,
  map`
...e...
.......
...k...
.......
.......
...p...`,
  map`
..e.........
............
......k.....
......kk....
............
............
............
..p......e..`,
  map`
....k
.....
..e..
.....
p....`,
  map`
.........w..
...www...w..
.....w......
www.ww.ww.ew
..w.....www.
.www.....ww.
............
k.p.........`,
  map`
............
.w.w...www..
.w.......www
w....ww.w...
wew....www.w
www....w....
..w......w..
....wwww...w
..p...k.ww..`,
  map`
....................
....................
w..w...........w.w..
w..w.w...w...w...www
w..w..w.w.w.w..w.w.w
w..w...w...w...w.w.w
.ww.................
....................
p...................`,
]


setMap(levels[level])
setSolids([player, wall, ])
setPushables({
  [player]: []
})

onInput("s", () => {
  getFirst(player).y += 1
})
onInput("w", () => {
  getFirst(player).y -= 1
})
onInput("a", () => {
  getFirst(player).x -= 1
})
onInput("d", () => {
  getFirst(player).x += 1
})

afterInput(() => {
  const playerSprite = getFirst(player)
  let knifeSprite = getFirst(knife)
  let portalSprite = getFirst(portal) // Get the portal sprite
  if (playerSprite.x === portalSprite.x && playerSprite.y === portalSprite.y) {
    // Player touched the portal, teleport to the next level
    console.log("Player touched the portal - Teleporting to the next level!")
    level++ // Move to the next level
    if (level >= levels.length) {
      level = 0 // Restart from the first level if reached the end
    }
    setMap(levels[level]) // Teleport the player to the next level
  }
  // Calculate movement direction towards the player
  const dx = playerSprite.x - knifeSprite.x
  const dy = playerSprite.y - knifeSprite.y

  // Update the knife position towards the player
  if (Math.abs(dx) > Math.abs(dy)) {
    // Move horizontally towards the player
    knifeSprite.x += Math.sign(dx)
  } else {
    // Move vertically towards the player
    knifeSprite.y += Math.sign(dy)
  }

  // Collision detection between player and knife after movement
  if (playerSprite.x === knifeSprite.x && playerSprite.y === knifeSprite.y) {
    // Player killed by the knife
    console.log("Player killed by knife!")

    // Optional: Additional logic such as resetting the level
    // You can add more custom logic here
  }
  // Check for collision between player and knife
  if (playerSprite.x === knifeSprite.x && playerSprite.y === knifeSprite.y) {
    // Player touched the knife, reset the level
    console.log("Player touched the knife - Level Restarting!")
    setMap(levels[level]) // Reset the level
  }


})